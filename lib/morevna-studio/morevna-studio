#!/bin/bash

export MOREVNASTUDIO_VERSION=0.2

set -e

compare_versions () {
    #
    # Source - https://stackoverflow.com/a/4025065
    #
    
    if [[ $1 == $2 ]]
    then
        echo '='
	return 0
    fi
    
    # Fix '-' (Blender 2.82-1)
    arg1=${1//-/.}
    arg2=${2//-/.}
    
    local IFS=.
    local i ver1=($arg1) ver2=($arg2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            echo '>'
	    return 0
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            echo '<'
	    return 0
        fi
    done
    return 0
}

find_version() {
	if [ -d "$1" ]; then
		pushd "$1" >/dev/null
		TESTDIR=`pwd -P`
		popd >/dev/null
	else
		TESTDIR="$1"
	fi
	if [ -f "$TESTDIR/packages.txt" ]; then
		# Read contents of file
		VERSION=""
		while IFS= read -r line
		do
		    PACKAGE="${line%%=*}"
		    if [[ "$PACKAGE" == "$APP" ]]; then
			VERSION="${line#*=}"
			break
		    fi
		done < "$TESTDIR/packages.txt"
		if [ -z "$VERSION" ]; then
		    find_version "`dirname \"$TESTDIR\"`"
		else
		    echo "$VERSION"
		fi
	else
		if [[ "$TESTDIR" == '/' ]]; then
			exit
		fi
		find_version "`dirname \"$TESTDIR\"`"
	fi
}

exec()
{
    
    if [ -z ${MOREVNASTUDIO_PATH_IS_SET} ];then
    export PATH="${MOREVNASTUDIO_DIR}/bin/:$PATH"
    fi
    export MOREVNASTUDIO_PATH_IS_SET=1

    source ${MOREVNASTUDIO_DIR}/etc/morevna-studio.ini
    
    if [ -f $HOME/.config/morevna-studio/morevna-studio.ini ]; then
    source $HOME/.config/morevna-studio/morevna-studio.ini
    fi
    if [ ! -z $MOREVNASTUDIO_CACHEDIR ]; then
    export ZEROINSTALL_PORTABLE_BASE=$MOREVNASTUDIO_CACHEDIR
    fi
    
    if [ -f $HOME/.config/morevna-studio/morevna-studio.version ]; then
	source $HOME/.config/morevna-studio/morevna-studio.version
    fi
    if [ ! -z "MOREVNASTUDIO_INSTALLED_VERSION" ] && [ "x$MOREVNASTUDIO_VERSION" != "x$MOREVNASTUDIO_INSTALLED_VERSION" ]; then
	if [ -f "${MOREVNASTUDIO_DIR}/lib/morevna-studio/user-install" ]; then
	    bash "${MOREVNASTUDIO_DIR}/lib/morevna-studio/user-install"
	fi
    fi
    
    export APP="$1"
    APP_NAME_UPPERCASE=`printf '%s\n' "$1" | awk '{ print toupper($0) }'`
    
    if [ -f "${MOREVNASTUDIO_DIR}/share/morevna-studio/packages/${APP}.conf" ]; then
	source "${MOREVNASTUDIO_DIR}/share/morevna-studio/packages/${APP}.conf"
    fi

    
    #APP_VERSION=$MOREVNA_VERSION_BLENDER
    #
    #if [ -z $APP_VERSION ]; then
	# TODO: Detect version from RenderChan
	#echo ...
    #fi
    
    # find which file we are working with
    ARG_FILE=""
    for ARG in "$@"; do
	for EXT in "${EXTENSIONS[@]}"; do
	    if [[ "$ARG" == *.${EXT} ]]; then
		ARG_FILE="${ARG}"
	    fi
	done
    done
    
    # find package version defined for this file
    if [ ! -z "${ARG_FILE}" ]; then
	APP_VERSION=$(find_version `dirname "${ARG_FILE}"`)
    else
	APP_VERSION=$(find_version `pwd`)
    fi
    
    # a. If version is not empty
    #  - ini configuration
    #  - /opt/package-version
    #  - 0install
    # b. If version is empty
    #  - ini configuration
    #  - /opt/package
    #  - 0install
    #  - /opt/package-version (latest) (fallback)
    
    
    if [ ! -z ${APP_VERSION} ]; then
	FOUND=0
	# 1. Read ini configuration
	if [ -f "${MOREVNASTUDIO_DIR}/etc/morevna-studio.d/${APP}.ini" ]; then
	    source "${MOREVNASTUDIO_DIR}/etc/morevna-studio.d/${APP}.ini"
	    APP_NAME_UPPERCASE=`printf '%s\n' "$1" | awk '{ print toupper($0) }'`
	    eval APP_PATH=${APP}'_'${APP_VERSION}
	    if [ -x "${APP_PATH}" ] && [ ! -d "${APP_PATH}" ]; then
		FOUND=1
		"${APP_PATH}" "${@:2}"
	    fi
	fi
	# 2. Check packages in opt
	if [ ${FOUND} != 1 ]; then
	    APP_DIR="${APP}-${APP_VERSION}"
	    for OPTDIR in "${MOREVNASTUDIO_DIR}/opt" "/opt"; do
		APP_PATH="${OPTDIR}/${APP_DIR}/${APP}"
		if [ -x "${APP_PATH}" ] && [ ! -d "${APP_PATH}" ]; then
		    FOUND=1
		    "${APP_PATH}" "${@:2}"
		    break
		fi
	    done
	fi
	# 3. Use 0-install
	if [ ${FOUND} != 1 ] && [ ${USE_0INSTALL} == 1 ]; then
	    VERSION_OPTION="--version=${APP_VERSION}"
	    0install run ${VERSION_OPTION} ${URI_0INSTALL} "${@:2}"
	fi
    else
	# 1. Read ini configuration
	if [ -f "${MOREVNASTUDIO_DIR}/etc/morevna-studio.d/${APP}.ini" ]; then
	    APP_VERSION="DEFAULT"
	    source "${MOREVNASTUDIO_DIR}/etc/morevna-studio.d/${APP}.ini"
	    eval APP_PATH=${APP}'_'${APP_VERSION}
	    if [ -x "${APP_PATH}" ] && [ ! -d "${APP_PATH}" ]; then
		FOUND=1
		"${APP_PATH}" "${@:2}"
	    fi
	fi
	# 2. Check packages in opt
	if [ "${FOUND}" != 1 ]; then
	    APP_DIR="${APP}"
	    for OPTDIR in "${MOREVNASTUDIO_DIR}/opt" "/opt"; do
		APP_PATH="${OPTDIR}/${APP_DIR}/${APP}"
		if [ -x "${APP_PATH}" ] && [ ! -d "${APP_PATH}" ]; then
		    FOUND=1
		    "${APP_PATH}" "${@:2}"
		    break
		fi
	    done
	fi
	# 3. Use 0-install
	if [ "${FOUND}" != 1 ] && [ "${USE_0INSTALL}" == 1 ]; then
	    VERSION_OPTION=""
	    0install run ${VERSION_OPTION} ${URI_0INSTALL} "${@:2}"
	fi
	# 4. Use latest installed version
	if [ "${FOUND}" != 1 ]; then
	    LATEST_VERSION=0
	    LATEST_VERSION_PATH=""
	    if [ -f "${MOREVNASTUDIO_DIR}/etc/morevna-studio.d/${APP}.ini" ];then
		while IFS= read -r line
		do
		    APP_PATH="${line#*=}"
		    if [ -x "${APP_PATH}" ] && [ ! -d "${APP_PATH}" ]; then
			VERSION="${line%%=*}"
			VERSION="${VERSION##*_}"
			if [[ "${VERSION}" != "DEFAULT" ]]; then
			    RESULT=`compare_versions $LATEST_VERSION, $VERSION`
			    if [ "$RESULT" == '<' ]; then
				LATEST_VERSION="$VERSION"
				LATEST_VERSION_PATH="${APP_PATH}"
			    fi
			fi
		    fi
		done < "${MOREVNASTUDIO_DIR}/etc/morevna-studio.d/${APP}.ini"
	    fi
	    for OPTDIR in "${MOREVNASTUDIO_DIR}/opt" "/opt"; do
		echo ${OPTDIR}
		for DIR in `ls -1d "${OPTDIR}/${APP}-"*`; do
		    APP_PATH="${DIR}/${APP}"
		    if [ -x "${APP_PATH}" ] && [ ! -d "${APP_PATH}" ]; then
			VERSION="${DIR##*-}"
			echo 1
			RESULT=`compare_versions $LATEST_VERSION $VERSION`
			echo 2
			if [ "$RESULT" == '<' ]; then
			    LATEST_VERSION="$VERSION"
			    LATEST_VERSION_PATH="${APP_PATH}"
			fi
		    fi
		    
		done
	    done
	    
	    if [ ! -z "${LATEST_VERSION_PATH}" ]; then
		echo "${LATEST_VERSION_PATH}"
		"${LATEST_VERSION_PATH}" "${@:2}"
	    else
		echo "ERROR: Unable to find any installation of '${APP}'."
		echo "       Please make sure to add following line to '${MOREVNASTUDIO_DIR}/etc/morevnastudio.d/${APP}.ini':"
		echo "              ${APP_NAME_UPPERCASE}_DEFAULT=\"/path/to/app/binary\""
		exit 1
	    fi
	fi
    fi
}

usage()
{
cat << EOF

==========================================================
Morevna Studio - software manager for animation production
==========================================================

Usage:
    morevna-studio exec APP [ARGS]
   
Examples:
    morevna-studio exec blender
    morevna-studio exec blender --help
    MOREVNA_VERSION_BLENDER=2.78-1 morevna-studio exec blender

EOF
}

main()
{
    # TODO: Check if 0install available
    # ...
    
    if [ -z "$1" ]; then
	usage
	exit 1
    fi
    
    SCRIPTPATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
    export MOREVNASTUDIO_DIR=`dirname "$SCRIPTPATH"`
    MOREVNASTUDIO_DIR=`dirname "$MOREVNASTUDIO_DIR"`
    
    case $1 in
	exec)
	    if [ -z "$2" ]; then
		usage
		exit 1
	    fi
	    exec "${@:2}"
	    ;;
	*)
	    usage
	    ;;
esac
}

main "$@"
