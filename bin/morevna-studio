#!/bin/bash

MOREVNASTUDIO_VERSION=0.1

set -e

find_version() {
	if [ -d "$1" ]; then
		pushd "$1" >/dev/null
		TESTDIR=`pwd -P`
		popd >/dev/null
	else
		TESTDIR="$1"
	fi
	if [ -f "$TESTDIR/packages.txt" ]; then
		# Read contents of file
		VERSION=""
		while IFS= read -r line
		do
		    PACKAGE="${line%%=*}"
		    if [[ "$PACKAGE" == "$APP" ]]; then
			VERSION="${line#*=}"
			break
		    fi
		done < "$TESTDIR/packages.txt"
		if [ -z "$VERSION" ]; then
		    find_version "`dirname \"$TESTDIR\"`"
		else
		    echo "$VERSION"
		fi
	else
		if [[ "$TESTDIR" == '/' ]]; then
			exit
		fi
		find_version "`dirname \"$TESTDIR\"`"
	fi
}

exec()
{
    
    if [ -f $HOME/.config/morevna-studio/morevna-studio.conf ]; then
    source $HOME/.config/morevna-studio/morevna-studio.conf
    fi
    if [ ! -z $MOREVNASTUDIO_CACHEDIR ]; then
    export ZEROINSTALL_PORTABLE_BASE=$MOREVNASTUDIO_CACHEDIR
    fi
    
    if [ -f $HOME/.config/morevna-studio/morevna-studio.version ]; then
	source $HOME/.config/morevna-studio/morevna-studio.version
    fi
    if [ "x$MOREVNASTUDIO_VERSION" != "x$MOREVNASTUDIO_INSTALLED_VERSION" ]; then
	install
    fi
    
    source "${MOREVNASTUDIO_DIR}/packages/${1}/${1}.conf"
    
    APP_NAME_UPPERCASE=`printf '%s\n' "$1" | awk '{ print toupper($0) }'`
    
    #APP_VERSION=$MOREVNA_VERSION_BLENDER
    #eval APP_VERSION='$MOREVNA_VERSION_'$APP_NAME_UPPERCASE
    #
    #if [ -z $APP_VERSION ]; then
	# TODO: Detect version from RenderChan
	#echo ...
    #fi
    
    export APP="$1"
    APP_VERSION="$(find_version `pwd`)"
    
    VERSION_OPTION=""
    if [ ! -z $APP_VERSION ]; then
	VERSION_OPTION="--version=${APP_VERSION}"
    fi
    
    0install run ${VERSION_OPTION} ${URI_0INSTALL} "${@:2}"
}

install()
{
    echo "Installing Morevna Studio..."
    
    [ -d $HOME/.local/morevna-studio/bin/ ] || mkdir -p $HOME/.local/morevna-studio/bin/
    # TODO: install scripts from "apps/" dir
    
    [ -d $HOME/.config/morevna-studio/ ] || mkdir -p $HOME/.config/morevna-studio/
    if [ ! -f $HOME/.config/morevna-studio/morevna-studio.conf ]; then
	source ${MOREVNASTUDIO_DIR}/morevna-studio.conf
	cp ${MOREVNASTUDIO_DIR}/morevna-studio.conf $HOME/.config/morevna-studio/morevna-studio.conf

	# TODO: ask location for packages (allow to place on SSD partition)		
	if false; then
	    [ -d /opt/morevna-studio/$USER ] || sudo mkdir -p /opt/morevna-studio/$USER
	    sudo chmod 700 /opt/morevna-studio/$USER
	    sudo chown $USER /opt/morevna-studio/$USER
	    echo "MOREVNASTUDIO_CACHEDIR=/opt/morevna-studio/$USER" >> $HOME/.config/morevna-studio/morevna-studio.conf
	fi
	
	echo "MOREVNASTUDIO_LAUNCHER=\"${MOREVNASTUDIO_DIR}/bin/morevna-studio\"" >> $HOME/.config/morevna-studio/morevna-studio.conf
    fi
    
    echo "MOREVNASTUDIO_INSTALLED_VERSION=$MOREVNASTUDIO_VERSION" > $HOME/.config/morevna-studio/morevna-studio.version
    
}

uninstall()
{
    echo "Uninstalling Morevna Studio..."
    # TODO: revert all operations done by install action
}

usage()
{
cat << EOF

==========================================================
Morevna Studio - software manager for animation production
==========================================================

Usage:
    morevna-studio exec APP [ARGS]
    morevna-studio install
    morevna-studio uninstall
   
Examples:
    morevna-studio exec blender
    morevna-studio exec blender --help
    MOREVNA_VERSION_BLENDER=2.78-1 morevna-studio exec blender

EOF
}

main()
{
    # TODO: Check if 0install available
    # ...
    
    if [ -z "$1" ]; then
	usage
	exit 1
    fi
    
    SCRIPTPATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
    export MOREVNASTUDIO_DIR=`dirname "$SCRIPTPATH"`
    
    case $1 in
	exec)
	    if [ -z "$2" ]; then
		usage
		exit 1
	    fi
	    exec "${@:2}"
	    ;;
	install)      
	    install "${@:2}"
	    ;;
	uninstall)
	    uninstall
	    ;;
	*)
	    usage
	    ;;
esac
}

main "$@"
